-- MySQL Script generated by MySQL Workbench
-- Tue Jan 16 20:44:07 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `ID` BIGINT GENERATED ALWAYS AS () VIRTUAL,
  `FirstName` VARCHAR(45) NOT NULL,
  `LastName` VARCHAR(45) NULL,
  `Email` VARCHAR(45) NULL,
  `Role` JSON NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Request` (
  `ID` BIGINT GENERATED ALWAYS AS () VIRTUAL,
  `Status` VARCHAR(45) NOT NULL,
  `CreationDate` TIMESTAMP NOT NULL,
  `UserId` BIGINT NOT NULL,
  `EmployeeId` BIGINT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `UserId_UNIQUE` (`UserId` ASC) VISIBLE,
  UNIQUE INDEX `EmployeeId_UNIQUE` (`EmployeeId` ASC) VISIBLE,
  CONSTRAINT `UserId`
    FOREIGN KEY (`UserId`)
    REFERENCES `mydb`.`User` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `EmployeeId`
    FOREIGN KEY (`EmployeeId`)
    REFERENCES `mydb`.`User` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Notification` (
  `ID` BIGINT GENERATED ALWAYS AS () VIRTUAL,
  `Type` VARCHAR(45) NULL,
  `Content` VARCHAR(45) NULL,
  `UserId` BIGINT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC) VISIBLE,
  UNIQUE INDEX `UserId_UNIQUE` (`UserId` ASC) VISIBLE,
  CONSTRAINT `UserId`
    FOREIGN KEY (`UserId`)
    REFERENCES `mydb`.`User` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Response`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Response` (
  `ID` BIGINT GENERATED ALWAYS AS () VIRTUAL,
  `Text` VARCHAR(1000) NULL,
  `RequestId` BIGINT NULL,
  PRIMARY KEY (`ID`),
  INDEX `RequestId_idx` (`RequestId` ASC) VISIBLE,
  CONSTRAINT `RequestId`
    FOREIGN KEY (`RequestId`)
    REFERENCES `mydb`.`Request` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`File`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`File` (
  `ID` BIGINT GENERATED ALWAYS AS () VIRTUAL,
  `Name` VARCHAR(45) NULL,
  `Path` VARCHAR(45) NULL,
  `RequestId` BIGINT NULL,
  PRIMARY KEY (`ID`),
  INDEX `RequestId_idx` (`RequestId` ASC) VISIBLE,
  CONSTRAINT `RequestId`
    FOREIGN KEY (`RequestId`)
    REFERENCES `mydb`.`Request` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Log` (
  `ID` BIGINT NOT NULL,
  `Timestamp` TIMESTAMP NULL,
  `UserId` BIGINT NULL,
  `Action` VARCHAR(45) NULL,
  `Details` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`),
  INDEX `UserId_idx` (`UserId` ASC) VISIBLE,
  CONSTRAINT `UserId`
    FOREIGN KEY (`UserId`)
    REFERENCES `mydb`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Task` (
  `ID` BIGINT GENERATED ALWAYS AS () VIRTUAL,
  `RequestID` BIGINT NULL,
  `Description` VARCHAR(45) NULL,
  `Status` VARCHAR(45) NULL,
  `AssignedTo` BIGINT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Department`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Department` (
  `ID` BIGINT GENERATED ALWAYS AS () VIRTUAL,
  `Name` VARCHAR(45) NULL,
  `ManagerID` BIGINT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC) VISIBLE,
  INDEX `ManagerID_idx` (`ManagerID` ASC) VISIBLE,
  CONSTRAINT `ManagerID`
    FOREIGN KEY (`ManagerID`)
    REFERENCES `mydb`.`User` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- Вставка пользователей
INSERT INTO `mydb`.`User` (`FirstName`, `LastName`, `Email`, `Role`) VALUES 
('Иван', 'Иванов', 'ivan@example.com', JSON_OBJECT('role', 'ADMIN')),
('Петр', 'Петров', 'petr@example.com', JSON_OBJECT('role', 'EMPLOYEE')),
('Мария', 'Сидорова', 'maria@example.com', JSON_OBJECT('role', 'USER'));

-- Вставка отделов
INSERT INTO `mydb`.`Department` (`Name`, `ManagerID`) VALUES 
('IT', 1),
('HR', 2);

-- Вставка запросов
INSERT INTO `mydb`.`Request` (`Status`, `CreationDate`, `UserId`, `EmployeeId`) VALUES 
('Открыт', CURRENT_TIMESTAMP, 1, 2),
('Закрыт', CURRENT_TIMESTAMP, 2, 1);

-- Вставка уведомлений
INSERT INTO `mydb`.`Notification` (`Type`, `Content`, `UserId`) VALUES 
('Email', 'Добро пожаловать, Иван!', 1),
('Email', 'Добро пожаловать, Петр!', 2);

-- Вставка ответов
INSERT INTO `mydb`.`Response` (`Text`, `RequestId`) VALUES 
('Ваш запрос принят', 1),
('Ваш запрос обработан', 2);

-- Вставка файлов
INSERT INTO `mydb`.`File` (`Name`, `Path`, `RequestId`) VALUES 
('file1.pdf', '/files/file1.pdf', 1),
('file2.pdf', '/files/file2.pdf', 2);

-- Вставка логов
INSERT INTO `mydb`.`Log` (`Timestamp`, `UserId`, `Action`, `Details`) VALUES 
(CURRENT_TIMESTAMP, 1, 'Login', 'Пользователь вошел в систему'),
(CURRENT_TIMESTAMP, 2, 'Logout', 'Пользователь вышел из системы');

-- Вставка задач
INSERT INTO `mydb`.`Task` (`RequestID`, `Description`, `Status`, `AssignedTo`) VALUES 
(1, 'Исправить баг', 'В процессе', 2),
(2, 'Подготовить отчет', 'Завершено', 1);
